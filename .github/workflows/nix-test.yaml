# This is a basic workflow to help you get started with Actions

name: Nix Test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  tests:
    runs-on: ${{ matrix.os.name }}
    strategy:
      matrix:
        os:
          - name: macos-14
            arch: aarch64-darwin
          - name: macos-13
            arch: x86_64-darwin
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@V27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup
        run: |
          sed -i '' "s/default/$(scutil --get LocalHostName)/g" nixos-config/hosts/default/configuration.nix
          sed -i '' "s/mike.splain/runner/g" nixos-config/hosts/default/configuration.nix
          sed -i '' "s/default = nix-darwin.lib.darwinSystem/$(scutil --get LocalHostName) = nix-darwin.lib.darwinSystem/g" nixos-config/flake.nix
          sed -i '' "s/aarch64-darwin/${{matrix.os.arch}}/g" nixos-config/flake.nix

          sudo mv /etc/nix/nix.conf /etc/nix/nix.conf.before-nix-darwin
          sudo mv /etc/shells /etc/shells.before-nix-darwin

      - name: Test
        env: 
          NIX_CONFIG: "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}"
        run: |
          nix run nix-darwin --extra-experimental-features nix-command --extra-experimental-features flakes -- switch --flake ./nixos-config
      # - run: nix build
