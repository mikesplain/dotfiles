name: Tests
on:
  push:
    branches: main
  pull_request:
    branches:
      - main
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 12 * * *'
jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
    steps:
    - name: Set up Git repository
      uses: actions/checkout@master

    - name: Validate syntax
      run: bash -n *.sh

    - name: Setup zsh
      run: sudo apt-get install zsh -yq
      if: matrix.os == 'ubuntu-latest'

    - name: Test script/setup
      run: bash script/setup

    - name: Test bashrc
      run: bash -c "source ~/.bashrc"

    - name: Test zshrc
      run: zsh -c "source ~/.zshrc"

    - name: Test Install
      run: bash script/test-install.sh

  merge-me:
    name: Merge me!
    needs:
      - tests
    runs-on: ubuntu-latest
    steps:
      - name: Merge me!
        uses: ridedott/merge-me-action@master
        with:
          # Depending on branch protection rules, a  manually populated
          # `GITHUB_TOKEN_WORKAROUND` environment variable with permissions to
          # push to a protected branch must be used. This variable can have an
          # arbitrary name, as an example, this repository uses
          # `GITHUB_TOKEN_DOTTBOTT`.
          #
          # When using a custom token, it is recommended to leave the following
          # comment for other developers to be aware of the reasoning behind it:
          #
          # This must be used as GitHub Actions token does not support
          # pushing to protected branches.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_METHOD: MERGE
          GITHUB_LOGIN: mikesplain

  notifications:
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - name: Slack Notice Action
      uses: sonots/slack-notice-action@v3.1.2
      with:
        status: ${{ job.status }}
        icon_emoji: ':octocat:'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # required, but GitHub should automatically supply
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
      if: always() # Pick up events even if the job fails or is canceled.
